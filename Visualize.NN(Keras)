# IPython, anaconda

from keras.models import Sequential
from keras.layers import Dense
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd

seed = 7
np.random.seed(seed)

df = pd.read_csv("data.csv")

dataset = df.astype(np.float32).values

X = dataset[:, 0:8]
Y = dataset[:, 8]

# NN model with Keras
model = Sequential()
model.add(Dense(12, input_dim=8, init= "uniform", activation = 'relu'))
model.add(Dense(8, init='uniform', activation = 'relu'))
model.add(Dense(1, init='uniform', activation='sigmoid'))

model.compile(loss='binary_crossentropy', optimizer='adam', metrics= ['accuracy'])

# Learning History
history = model.fit(X, Y, validation_split = 0.33, nb_epoch=100, batch_size= 10, verbose= 0)

print(history.history["acc"])

# Plot Learning History
plt.plot(history.history['acc'])
plt.plot(history.history['val_acc'])
plt.title('model accuracy')
plt.ylabel('accuracy')
plt.xlabel('epoch')
plt.legend(['train', 'test'], loc = 'upper left')
plt.show()

plt.plot(history.history['loss'])
plt.plot(history.history['val_loss'])
plt.title('model loss')
plt.ylabel('loss')
plt.xlabel('epoch')
plt.legend(['train', 'test'], loc='upper left')
plt.show()



